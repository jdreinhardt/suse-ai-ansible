---
- name: Check for AWS instance metadata
  ansible.builtin.uri:
    url: http://169.254.169.254/latest/meta-data/instance-id
    timeout: 5
    method: GET
  register: aws_metadata
  failed_when: false
  changed_when: false

- name: Check for Azure instance metadata
  ansible.builtin.uri:
    url: http://169.254.169.254/metadata/instance?api-version=2021-02-01
    timeout: 5
    method: GET
    headers:
      Metadata: "true"
  register: azure_metadata
  failed_when: false
  changed_when: false

- name: Check for GCP instance metadata
  ansible.builtin.uri:
    url: http://metadata.google.internal/computeMetadata/v1/instance/id
    timeout: 5
    method: GET
    headers:
      Metadata-Flavor: "Google"
  register: gcp_metadata
  failed_when: false
  changed_when: false

- name: Set cloud provider facts
  ansible.builtin.set_fact:
    is_aws_node: "{{ aws_metadata.status == 200 }}"
    is_azure_node: "{{ azure_metadata.status == 200 }}"
    is_gcp_node: "{{ gcp_metadata.status == 200 }}"

- name: Check for EKS Cluster
  ansible.builtin.uri:
    url: http://169.254.169.254/latest/meta-data/tags/instance/eks:cluster-name
    method: GET
    return_content: true
  register: aws_eks_cluster
  failed_when: false
  changed_when: false
  when: is_aws_node

- block:
    - name: Get Azure metadata
      ansible.builtin.uri:
        url: http://169.254.169.254/metadata/instance?api-version=2021-02-01&format=json
        method: GET
        headers:
          Metadata: "true"
        return_content: true
      register: azure_full_metadata
      failed_when: false
      changed_when: false

    - name: Parse Azure node name for AKS
      ansible.builtin.set_fact:
        is_aks_node: "{{ azure_full_metadata.json.compute.name is match('^aks-.*') }}"
      when: azure_full_metadata.json.compute is defined
  when: is_azure_node

- name: Get GKE cluster-name metadata
  ansible.builtin.uri:
    url: http://metadata.google.internal/computeMetadata/v1/instance/attributes/cluster-name
    method: GET
    headers:
      Metadata-Flavor: "Google"
    return_content: true
  register: gcp_cluster_name
  failed_when: false
  changed_when: false
  when: is_gcp_node

- name: Set cloud cluster facts
  ansible.builtin.set_fact:
    is_eks_cluster: "{{ aws_eks_cluster.status == 200 }}"
    is_aks_cluster: "{{ is_aks_node | default(false) }}"
    is_gke_cluster: "{{ gcp_cluster_name.status == 200 }}"
