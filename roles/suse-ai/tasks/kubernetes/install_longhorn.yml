---
# Install Longhorn

- name: Add Longhorn helm repo
  kubernetes.core.helm_repository:
    name: longhorn
    repo_url: "https://charts.longhorn.io"

- name: Install Longhorn
  kubernetes.core.helm:
    name: longhorn
    chart_ref: longhorn/longhorn
    release_namespace: longhorn-system
    create_namespace: true

- name: Wait for Longhorn to initialize
  ansible.builtin.wait_for:
    timeout: 60
  delegate_to: localhost

- name: Check if longhorn is default StorageClass
  ansible.builtin.shell: |
    kubectl get storageclass longhorn -o jsonpath='{.metadata.annotations.storageclass\.kubernetes\.io/is-default-class}'
  register: longhorn_is_default_check
  changed_when: false
  ignore_errors: true

- name: Set longhorn as default StorageClass
  ansible.builtin.shell: |
    kubectl patch storageclass longhorn -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
  when: longhorn_is_default_check.stdout != "true"

- block:
    - name: Verify if longhorn-xfs exists
      ansible.builtin.shell: |
        kubectl get storageclass longhorn-xfs -o name
      register: storageclass_check
      failed_when: false
      changed_when: false

    - name: Set fact if longhorn-xfs exists
      ansible.builtin.set_fact:
        longhorn_xfs_storageclass_exists: "{{ storageclass_check.stdout | length > 0 }}"

    - block:
        - name: Copy xfs resource config
          ansible.builtin.copy:
            src: k8s_config/longhorn-xfs.yml
            dest: /tmp/longhorn-xfs.yml

        - name: Apply longhorn-xfs config
          ansible.builtin.shell: |
            kubectl apply -f /tmp/longhorn-xfs.yml

      when: not longhorn_xfs_storageclass_exists

  when: suse_ai_longhorn_xfs_enabled | default(true)
